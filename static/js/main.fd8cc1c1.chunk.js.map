{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/pages/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["Loader","_jsx","className","children","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","_ref","person","Link","to","concat","slug","classNames","sex","name","PeopleTable","people","isSelected","personsMotherLink","mother","find","p","motherName","personsFatherLink","father","fatherName","_jsxs","map","born","died","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","hasError","setHasError","_useState5","_useState6","isFetching","setIsFetching","_useParams$slug","useParams","getPeopleFromServer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fetchedPeople","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","useEffect","_Fragment","length","Navbar","role","NavLink","isActive","_ref2","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.fd8cc1c1.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  slug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  const isSelected = (person: Person) => person.slug === slug;\n\n  const personsMotherLink = (person: Person) => {\n    const mother = people.find(p => p.name === person.motherName);\n\n    if (mother) {\n      return (\n        <PersonLink person={mother} />\n      );\n    }\n\n    return person.motherName\n      ? person.motherName\n      : '-';\n  };\n\n  const personsFatherLink = (person: Person) => {\n    const father = people.find(p => p.name === person.fatherName);\n\n    if (father) {\n      return (\n        <PersonLink person={father} />\n      );\n    }\n\n    return person.fatherName\n      ? person.fatherName\n      : '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': isSelected(person),\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{personsMotherLink(person)}</td>\n            <td>{personsFatherLink(person)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n\n  const { slug = '' } = useParams();\n\n  const getPeopleFromServer = async () => {\n    try {\n      const fetchedPeople = await getPeople();\n\n      setPeople(fetchedPeople);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsFetching(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  const renderTable = () => {\n    if (isFetching) {\n      return <Loader />;\n    }\n\n    if (hasError) {\n      return (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      );\n    }\n\n    if (!people.length) {\n      return (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      );\n    }\n\n    return (\n      <PeopleTable\n        people={people}\n        slug={slug}\n      />\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {renderTable()}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}