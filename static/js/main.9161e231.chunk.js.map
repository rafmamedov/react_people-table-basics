{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/RenderTable.tsx","components/pages/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","_jsx","className","children","PersonLink","_ref","_ref$person","person","slug","sex","name","Link","to","concat","classNames","PeopleTable","people","isSelected","getPersonLinkByName","parentName","parent","find","_jsxs","map","born","died","motherName","fatherName","RenderTable","hasError","isFetching","length","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","setHasError","_useState5","_useState6","setIsFetching","_useParams$slug","useParams","getPeopleFromServer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fetchedPeople","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","useEffect","_Fragment","Navbar","role","NavLink","isActive","_ref2","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.9161e231.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person: { slug, sex, name },\n}) => (\n  <Link\n    to={`/people/${slug}`}\n    className={classNames({\n      'has-text-danger': sex === 'f',\n    })}\n  >\n    {name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  slug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  const isSelected = (person: Person) => person.slug === slug;\n\n  const getPersonLinkByName = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return (\n        <PersonLink person={parent} />\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': isSelected(person),\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{getPersonLinkByName(person.motherName)}</td>\n            <td>{getPersonLinkByName(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\ntype Props = {\n  slug: string;\n  people: Person[];\n  hasError: boolean;\n  isFetching: boolean;\n};\n\nexport const RenderTable: React.FC<Props> = ({\n  slug,\n  people,\n  hasError,\n  isFetching,\n}) => {\n  if (isFetching) {\n    return <Loader />;\n  }\n\n  if (hasError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <PeopleTable\n      people={people}\n      slug={slug}\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { RenderTable } from '../RenderTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n\n  const { slug = '' } = useParams();\n\n  const getPeopleFromServer = async () => {\n    try {\n      const fetchedPeople = await getPeople();\n\n      setPeople(fetchedPeople);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsFetching(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <RenderTable\n            slug={slug}\n            people={people}\n            hasError={hasError}\n            isFetching={isFetching}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}